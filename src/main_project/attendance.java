/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * attendance.java
 *
 * Created on Sep 21, 2014, 5:57:30 PM
 */
package main_project;

import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.Mongo;
import com.mongodb.MongoException;
import java.awt.event.KeyEvent;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NIRAJ
 */
public class attendance extends javax.swing.JFrame {

    /** Creates new form attendance */
    public attendance() {
        initComponents();
        
        this.setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        Attendance_Name = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Roll_No = new javax.swing.JLabel();
        Roll_No_Text = new javax.swing.JTextField();
        Class = new javax.swing.JLabel();
        Class_List = new javax.swing.JComboBox();
        Branch = new javax.swing.JLabel();
        Branch_List = new javax.swing.JComboBox();
        Attendance = new javax.swing.JLabel();
        Attendance_Text = new javax.swing.JTextField();
        Submit = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        Reg_No_Text = new javax.swing.JTextField();
        find = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Menu = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Show = new javax.swing.JTable();
        Clear_Table = new javax.swing.JButton();
        Show_All = new javax.swing.JButton();
        Back = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Attendance_Name.setFont(new java.awt.Font("Tempus Sans ITC", 0, 30));
        Attendance_Name.setForeground(new java.awt.Color(102, 102, 255));
        Attendance_Name.setIcon(new javax.swing.ImageIcon("G:\\project\\pics\\icon\\icons\\att.jpg")); // NOI18N
        Attendance_Name.setText("  Attendance");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        Roll_No.setFont(new java.awt.Font("Tahoma", 0, 14));
        Roll_No.setText("Roll No:");

        Roll_No_Text.setFont(new java.awt.Font("Tahoma", 0, 14));

        Class.setFont(new java.awt.Font("Tahoma", 0, 14));
        Class.setText("Class:");

        Class_List.setFont(new java.awt.Font("Tahoma", 0, 14));
        Class_List.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "FE", "SE", "TE", "BE" }));

        Branch.setFont(new java.awt.Font("Tahoma", 0, 14));
        Branch.setText("Branch:");

        Branch_List.setFont(new java.awt.Font("Tahoma", 0, 14));
        Branch_List.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "IT", "Computer", "E&TC", "Mechanical", "Civil" }));

        Attendance.setFont(new java.awt.Font("Tahoma", 0, 14));
        Attendance.setText("Attendance(%):");

        Attendance_Text.setFont(new java.awt.Font("Tahoma", 0, 14));
        Attendance_Text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Attendance_TextKeyPressed(evt);
            }
        });

        Submit.setBackground(new java.awt.Color(255, 255, 255));
        Submit.setFont(new java.awt.Font("Tempus Sans ITC", 0, 15));
        Submit.setIcon(new javax.swing.ImageIcon("G:\\project\\pics\\icon\\icons\\clear-for-ios-7-icon-580-100054611-large - Copy.png")); // NOI18N
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        Clear.setFont(new java.awt.Font("Tempus Sans ITC", 0, 15));
        Clear.setIcon(new javax.swing.ImageIcon("G:\\project\\pics\\icon\\icons\\clea - Copy.jpg")); // NOI18N
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        Reg_No_Text.setFont(new java.awt.Font("Tahoma", 0, 14));
        Reg_No_Text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Reg_No_TextKeyPressed(evt);
            }
        });

        find.setBackground(new java.awt.Color(255, 255, 255));
        find.setIcon(new javax.swing.ImageIcon("G:\\project\\pics\\icon\\icons\\search.jpg")); // NOI18N
        find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel1.setText("Reg No.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(Attendance)
                        .addGap(18, 18, 18)
                        .addComponent(Attendance_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Class)
                            .addComponent(Branch)
                            .addComponent(Submit)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addComponent(Roll_No)))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Reg_No_Text, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Class_List, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Roll_No_Text, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Clear)
                                    .addComponent(Branch_List, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(18, 18, 18)
                .addComponent(find, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Reg_No_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Roll_No)
                            .addComponent(Roll_No_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Class)
                            .addComponent(Class_List, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Branch)
                            .addComponent(Branch_List, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Attendance)
                            .addComponent(Attendance_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(find))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        Menu.setFont(new java.awt.Font("Tempus Sans ITC", 0, 13));
        Menu.setIcon(new javax.swing.ImageIcon("G:\\project\\pics\\icon\\icons\\home - Copy.jpg")); // NOI18N
        Menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuActionPerformed(evt);
            }
        });

        Show.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reg. No.", "Roll No", "Class", "Branch", "Attendance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Show.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(Show);

        Clear_Table.setBackground(new java.awt.Color(255, 255, 255));
        Clear_Table.setFont(new java.awt.Font("Tempus Sans ITC", 0, 15));
        Clear_Table.setIcon(new javax.swing.ImageIcon("G:\\project\\pics\\icon\\icons\\images (2).jpg")); // NOI18N
        Clear_Table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear_TableActionPerformed(evt);
            }
        });

        Show_All.setBackground(new java.awt.Color(0, 102, 102));
        Show_All.setFont(new java.awt.Font("Tempus Sans ITC", 0, 18));
        Show_All.setForeground(new java.awt.Color(255, 255, 255));
        Show_All.setText("Show All");
        Show_All.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Show_AllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Show_All, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(141, 141, 141)
                        .addComponent(Clear_Table, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Clear_Table)
                    .addComponent(Show_All))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        Back.setBackground(new java.awt.Color(255, 255, 255));
        Back.setIcon(new javax.swing.ImageIcon("G:\\project\\pics\\icon\\icons\\back.png")); // NOI18N
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Attendance_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(165, 165, 165)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Attendance_Name)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Back))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Menu)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void MenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuActionPerformed
// TODO add your handling code here:
    this.setVisible(false);
    new menu().setVisible(true);
}//GEN-LAST:event_MenuActionPerformed

private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
String Reg_No_1,Roll_No_3,Class_3,Branch_3,Attendance_3;
    
    Reg_No_1=Reg_No_Text.getText();
    Roll_No_3= Roll_No_Text.getText();
    Class_3=(String) Class_List.getSelectedItem();
    Branch_3=(String)Branch_List.getSelectedItem();
    Attendance_3=Attendance_Text.getText();
    if (Reg_No_1.equals("") || !Pattern.matches("[0-9]+", Reg_No_1) ){
    JOptionPane.showMessageDialog(null, "Please check Registration number");
}
    
  else if (Roll_No_3.equals("") || !Pattern.matches("[0-9]+", Roll_No_3) ){
    JOptionPane.showMessageDialog(null, "Please Enter Valid Roll Number");
}
   else if (Attendance_3.equals("") || Pattern.matches("[a-z]+", Attendance_3)){
    JOptionPane.showMessageDialog(null, "Enter Attendance");
}
    else 
   {    
    try {
            
            Mongo mongo =new Mongo("127.0.0.1",27017); 
            DB db=mongo.getDB("Project_Demo");
            DBCollection collection=db.getCollection("Attendance");
            System.out.println("Connected to DB");
            BasicDBObject save=new BasicDBObject();
             BasicDBObject query = new BasicDBObject();
                    query.put("Reg_No",Reg_No_1);
                    DBCursor cursor = collection.find(query);
            
            
                        if(cursor.hasNext()){
                            JOptionPane.showMessageDialog(null, "sorry...data on this Reg. no. is already present");
                            Reg_No_Text.setText("");
                           this.setVisible(false);
                           new attendance().setVisible(true);
                        }
                        else{
                            save.append("Reg_No",Reg_No_1);
                            save.append("Roll_No",Roll_No_3);
                            save.append("Class",Class_3);
                            save.append("Branch",Branch_3);
                            save.append("Attendance",Attendance_3);
                            collection.insert(save);
                            JOptionPane.showMessageDialog(null, "Record Inserted Successfully");
                        }
            
            
    }
            
           
        catch (UnknownHostException ex) {
            Logger.getLogger(attendance.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
        new attendance().setVisible(true);
   }

}//GEN-LAST:event_SubmitActionPerformed

private void Show_AllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Show_AllActionPerformed
 DefaultTableModel u = (DefaultTableModel) Show.getModel();
 int n = u.getRowCount();
 for(int i = 0;i<n;i++){
     u.removeRow(0);
 }
    try {
           
            Mongo mongo = new Mongo("127.0.0.1",27017);
            DB db=mongo.getDB("Project_Demo");
            DBCollection collection=db.getCollection("Attendance");
            System.out.println("Connected to DB");
            BasicDBObject save=new BasicDBObject();
            
           
            DBCursor cursor = collection.find();
            while(cursor.hasNext()) {
               
                 u.addRow(new Object[]{cursor.next().get("Reg_No"),cursor.curr().get("Roll_No")
                         ,cursor.curr().get("Class")
                         ,cursor.curr().get("Branch")
                         ,cursor.curr().get("Attendance")});
     
            }
}
        catch (UnknownHostException ex) {
            Logger.getLogger(attendance.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MongoException ex) {
            Logger.getLogger(attendance.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    
}//GEN-LAST:event_Show_AllActionPerformed

private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
// TODO add your handling code here:
    Reg_No_Text.setText("");
    Roll_No_Text.setText("");
    Class_List.setSelectedItem("");
    Branch_List.setSelectedItem("");
    Attendance_Text.setText("");
}//GEN-LAST:event_ClearActionPerformed

private void Clear_TableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Clear_TableActionPerformed
// TODO add your handling code here:
     DefaultTableModel u = (DefaultTableModel) Show.getModel();
int no = u.getRowCount();
int n=0;
for(n=0; n<no; n++)
    {
     u.removeRow(0);   
    }
}//GEN-LAST:event_Clear_TableActionPerformed

private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
// TODO add your handling code here:
    this.setVisible(false);
    new student_details().setVisible(true);
}//GEN-LAST:event_BackActionPerformed

private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed
String Reg_No_1;
    Reg_No_1 = Reg_No_Text.getText();
    
    if (Reg_No_1.equals("") || !Pattern.matches("[0-9]+", Reg_No_1) ){
            JOptionPane.showMessageDialog(null, "Please Enter Valid Registration Number");
         }
    else {
            try{
                Mongo  mongo = new Mongo("127.0.0.1",27017);
                DB db= mongo.getDB("Project_Demo");
                DBCollection collection=db.getCollection("Registration");
                System.out.println("Connected to DB");
                BasicDBObject query = new BasicDBObject();
                query.put("Reg_No",Reg_No_1);
                DBCursor cursor = collection.find(query);
                if(cursor.hasNext()){
                    JOptionPane.showMessageDialog(null, "Record Found");
                    DBObject save = cursor.next();
                                 
                                 String clas =(String) save.get("Class");
                                 String roll =(String) save.get("Roll_No");
                                 String dept =(String) save.get("Dept");
                                 
                                 Roll_No_Text.setText(roll);
                                 Branch_List.setSelectedItem(dept);
                                 Class_List.setSelectedItem(clas);
                                 Reg_No_Text.setEnabled(true);
                                 Roll_No_Text.setEnabled(false);
                                 Branch_List.setEnabled(false);
                                 Reg_No_Text.setEnabled(false);
                                 Class_List.setEnabled(false);
                                 Attendance_Text.setEnabled(true);
                                
                                 
                                 
                    
                }
                else{
                    JOptionPane.showMessageDialog(null, "Record Not Found");
                    
                                  Roll_No_Text.setEnabled(false);
                                  Branch_List.setEnabled(false);
                                  Attendance_Text.setEnabled(false);
                                  Reg_No_Text.setEnabled(true);
                                  Class_List.setEnabled(false);
                }
                }
                catch (UnknownHostException ex) {
                    Logger.getLogger(add_marks.class.getName()).log(Level.SEVERE, null, ex);
                } 
                catch (MongoException ex) {
                    Logger.getLogger(add_marks.class.getName()).log(Level.SEVERE, null, ex);
                }
         }
}//GEN-LAST:event_findActionPerformed

private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
                                 Roll_No_Text.setEnabled(false);
                                 Branch_List.setEnabled(false);
                                 Class_List.setEnabled(false);
                                 Attendance_Text.setEnabled(false);
                                  
}//GEN-LAST:event_formWindowOpened

private void Attendance_TextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Attendance_TextKeyPressed
// TODO add your handling code here:
    if(evt.getKeyCode()==KeyEvent.VK_ENTER){
    String Reg_No_1,Roll_No_3,Class_3,Branch_3,Attendance_3;
    
    Reg_No_1=Reg_No_Text.getText();
    Roll_No_3= Roll_No_Text.getText();
    Class_3=(String) Class_List.getSelectedItem();
    Branch_3=(String)Branch_List.getSelectedItem();
    Attendance_3=Attendance_Text.getText();
    if (Reg_No_1.equals("") || !Pattern.matches("[0-9]+", Reg_No_1) ){
    JOptionPane.showMessageDialog(null, "Please check Registration number");
}
    
  else if (Roll_No_3.equals("") || !Pattern.matches("[0-9]+", Roll_No_3) ){
    JOptionPane.showMessageDialog(null, "Please Enter Valid Roll Number");
}
   else if (Attendance_3.equals("") || Pattern.matches("[a-z]+", Attendance_3)){
    JOptionPane.showMessageDialog(null, "Enter Attendance");
}
    else 
   {    
    try {
            
            Mongo mongo =new Mongo("127.0.0.1",27017); 
            DB db=mongo.getDB("Project_Demo");
            DBCollection collection=db.getCollection("Attendance");
            System.out.println("Connected to DB");
            BasicDBObject save=new BasicDBObject();
             BasicDBObject query = new BasicDBObject();
                    query.put("Reg_No",Reg_No_1);
                    DBCursor cursor = collection.find(query);
            
            
                        if(cursor.hasNext()){
                            JOptionPane.showMessageDialog(null, "sorry...data on this Reg. no. is already present");
                            Reg_No_Text.setText("");
                           this.setVisible(false);
                           new attendance().setVisible(true);
                        }
                        else{
                            save.append("Reg_No",Reg_No_1);
            save.append("Roll_No",Roll_No_3);
            save.append("Class",Class_3);
            save.append("Branch",Branch_3);
            save.append("Attendance",Attendance_3);
                            collection.insert(save);
                             JOptionPane.showMessageDialog(null, "Record Inserted Successfully");
                        }
            
            
    }
            
           
        catch (UnknownHostException ex) {
            Logger.getLogger(attendance.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
        new attendance().setVisible(true);
   }
}
}//GEN-LAST:event_Attendance_TextKeyPressed

private void Reg_No_TextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Reg_No_TextKeyPressed
// TODO add your handling code here:
    if(evt.getKeyCode()==KeyEvent.VK_ENTER){
    String Reg_No_1;
    Reg_No_1 = Reg_No_Text.getText();
    
    if (Reg_No_1.equals("") || !Pattern.matches("[0-9]+", Reg_No_1) ){
            JOptionPane.showMessageDialog(null, "Please Enter Valid Registration Number");
         }
    else {
            try{
                Mongo  mongo = new Mongo("127.0.0.1",27017);
                DB db= mongo.getDB("Project_Demo");
                DBCollection collection=db.getCollection("Registration");
                System.out.println("Connected to DB");
                BasicDBObject query = new BasicDBObject();
                query.put("Reg_No",Reg_No_1);
                DBCursor cursor = collection.find(query);
                if(cursor.hasNext()){
                    JOptionPane.showMessageDialog(null, "Record Found");
                    DBObject save = cursor.next();
                                 
                                 String clas =(String) save.get("Class");
                                 String roll =(String) save.get("Roll_No");
                                 String dept =(String) save.get("Dept");
                                 
                                 Roll_No_Text.setText(roll);
                                 Branch_List.setSelectedItem(dept);
                                 Class_List.setSelectedItem(clas);
                                 Reg_No_Text.setEnabled(true);
                                 Roll_No_Text.setEnabled(false);
                                 Branch_List.setEnabled(false);
                                 Reg_No_Text.setEnabled(false);
                                 Class_List.setEnabled(false);
                                 Attendance_Text.setEnabled(true);
                                
                                 
                                 
                    
                }
                else{
                    JOptionPane.showMessageDialog(null, "Record Not Found");
                    
                                  Roll_No_Text.setEnabled(false);
                                  Branch_List.setEnabled(false);
                                  Attendance_Text.setEnabled(false);
                                  Reg_No_Text.setEnabled(true);
                                  Class_List.setEnabled(false);
                }
                }
                catch (UnknownHostException ex) {
                    Logger.getLogger(add_marks.class.getName()).log(Level.SEVERE, null, ex);
                } 
                catch (MongoException ex) {
                    Logger.getLogger(add_marks.class.getName()).log(Level.SEVERE, null, ex);
                }
         }
    }
}//GEN-LAST:event_Reg_No_TextKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new attendance().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Attendance;
    private javax.swing.JLabel Attendance_Name;
    private javax.swing.JTextField Attendance_Text;
    private javax.swing.JButton Back;
    private javax.swing.JLabel Branch;
    private javax.swing.JComboBox Branch_List;
    private javax.swing.JLabel Class;
    private javax.swing.JComboBox Class_List;
    private javax.swing.JButton Clear;
    private javax.swing.JButton Clear_Table;
    private javax.swing.JButton Menu;
    private javax.swing.JTextField Reg_No_Text;
    private javax.swing.JLabel Roll_No;
    private javax.swing.JTextField Roll_No_Text;
    private javax.swing.JTable Show;
    private javax.swing.JButton Show_All;
    private javax.swing.JButton Submit;
    private javax.swing.JButton find;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
