/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * fee_details.java
 *
 * Created on Sep 21, 2014, 5:48:19 PM
 */
package main_project;

import javax.swing.JOptionPane;
import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.Mongo;
import com.mongodb.MongoException;
import java.awt.event.KeyEvent;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author NIRAJ
 */
public class fee_details extends javax.swing.JFrame {

    /** Creates new form fee_details */
    public fee_details() {
        initComponents();
        
        this.setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Fee_Details = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        Show_All = new javax.swing.JButton();
        Menu = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        Reg_No = new javax.swing.JLabel();
        Reg_No_Text = new javax.swing.JTextField();
        Branch = new javax.swing.JLabel();
        Branch_list = new javax.swing.JComboBox();
        FE = new javax.swing.JLabel();
        FE_Text = new javax.swing.JTextField();
        Submit = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        fname_Text = new javax.swing.JTextField();
        lname_Text = new javax.swing.JTextField();
        Roll_No = new javax.swing.JLabel();
        Roll_No_Text = new javax.swing.JTextField();
        Status = new javax.swing.JLabel();
        Status_list = new javax.swing.JComboBox();
        Clear = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        SE = new javax.swing.JLabel();
        SE_Text = new javax.swing.JTextField();
        BE_Text = new javax.swing.JTextField();
        TE_Text = new javax.swing.JTextField();
        TE = new javax.swing.JLabel();
        BE = new javax.swing.JLabel();
        find = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Show = new javax.swing.JTable();
        Clear_Table = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Fee_Details.setFont(new java.awt.Font("Tempus Sans ITC", 0, 36));
        Fee_Details.setForeground(new java.awt.Color(0, 102, 102));
        Fee_Details.setText("  Fee Details");

        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel2.setText("Registration no:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(32, 15, 97, 17);

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jPanel1.add(jTextField1);
        jTextField1.setBounds(157, 12, 74, 23);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel3.setText("Name:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(32, 52, 40, 17);

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jPanel1.add(jTextField2);
        jTextField2.setBounds(157, 49, 74, 23);

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 14));
        jPanel1.add(jTextField3);
        jTextField3.setBounds(249, 49, 75, 23);

        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 14));
        jPanel1.add(jTextField4);
        jTextField4.setBounds(157, 191, 80, 23);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel4.setText("Class:");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(32, 121, 35, 17);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Paid", "Unpaid" }));
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(157, 231, 70, 23);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel5.setText("Status:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(32, 234, 44, 17);

        jButton1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14));
        jButton1.setText("Submit");
        jPanel1.add(jButton1);
        jButton1.setBounds(70, 270, 177, 27);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel6.setText("Roll No:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(32, 89, 47, 17);

        jTextField5.setFont(new java.awt.Font("Tahoma", 0, 14));
        jPanel1.add(jTextField5);
        jTextField5.setBounds(157, 83, 74, 23);

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "FE", "SE", "TE", "BE" }));
        jPanel1.add(jComboBox2);
        jComboBox2.setBounds(157, 118, 90, 23);

        jComboBox3.setFont(new java.awt.Font("Tahoma", 0, 14));
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "IT", "Computer", "E&TC", "Mechanical", "Civil" }));
        jPanel1.add(jComboBox3);
        jComboBox3.setBounds(157, 152, 93, 23);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel7.setText("Branch:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(32, 155, 48, 17);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel8.setText("Total Amount:");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(32, 194, 88, 17);

        jComboBox4.setFont(new java.awt.Font("Tahoma", 0, 14));
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "FE", "SE", "TE", "BE" }));
        jPanel1.add(jComboBox4);
        jComboBox4.setBounds(157, 118, 90, 23);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel9.setText("Branch:");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(32, 155, 48, 17);

        Show_All.setBackground(new java.awt.Color(0, 102, 102));
        Show_All.setFont(new java.awt.Font("Tempus Sans ITC", 0, 24));
        Show_All.setForeground(new java.awt.Color(255, 255, 255));
        Show_All.setText("Show All");
        Show_All.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Show_AllActionPerformed(evt);
            }
        });

        Menu.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14));
        Menu.setIcon(new javax.swing.ImageIcon("G:\\project\\pics\\icon\\icons\\home - Copy.jpg")); // NOI18N
        Menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        Reg_No.setFont(new java.awt.Font("Tahoma", 0, 14));
        Reg_No.setText("Registration no:");

        Reg_No_Text.setFont(new java.awt.Font("Tahoma", 0, 14));
        Reg_No_Text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Reg_No_TextKeyPressed(evt);
            }
        });

        Branch.setFont(new java.awt.Font("Tahoma", 0, 14));
        Branch.setText("Branch:");

        Branch_list.setFont(new java.awt.Font("Tahoma", 0, 14));
        Branch_list.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "IT", "Computer", "E&TC", "Mechanical", "Civil" }));

        FE.setFont(new java.awt.Font("Tahoma", 0, 14));
        FE.setText("FE");

        FE_Text.setFont(new java.awt.Font("Tahoma", 0, 14));
        FE_Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FE_TextActionPerformed(evt);
            }
        });
        FE_Text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FE_TextKeyPressed(evt);
            }
        });

        Submit.setBackground(new java.awt.Color(255, 255, 255));
        Submit.setFont(new java.awt.Font("Tempus Sans ITC", 0, 15));
        Submit.setIcon(new javax.swing.ImageIcon("G:\\project\\pics\\icon\\icons\\download (2).jpg")); // NOI18N
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel14.setText("Name:");

        fname_Text.setFont(new java.awt.Font("Tahoma", 0, 14));

        lname_Text.setFont(new java.awt.Font("Tahoma", 0, 14));

        Roll_No.setFont(new java.awt.Font("Tahoma", 0, 14));
        Roll_No.setText("Roll No:");

        Roll_No_Text.setFont(new java.awt.Font("Tahoma", 0, 14));

        Status.setFont(new java.awt.Font("Tahoma", 0, 14));
        Status.setText("Status:");

        Status_list.setFont(new java.awt.Font("Tahoma", 0, 14));
        Status_list.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Paid", "Unpaid" }));
        Status_list.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Status_listKeyPressed(evt);
            }
        });

        Clear.setBackground(new java.awt.Color(255, 255, 255));
        Clear.setFont(new java.awt.Font("Tempus Sans ITC", 0, 15));
        Clear.setIcon(new javax.swing.ImageIcon("G:\\project\\pics\\icon\\icons\\390 - Copy.jpg")); // NOI18N
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        Back.setBackground(new java.awt.Color(255, 255, 255));
        Back.setFont(new java.awt.Font("Tempus Sans ITC", 0, 15));
        Back.setIcon(new javax.swing.ImageIcon("G:\\project\\pics\\icon\\icons\\back.png")); // NOI18N
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        SE.setFont(new java.awt.Font("Tahoma", 0, 14));
        SE.setText("SE");

        SE_Text.setFont(new java.awt.Font("Tahoma", 0, 14));
        SE_Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SE_TextActionPerformed(evt);
            }
        });
        SE_Text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SE_TextKeyPressed(evt);
            }
        });

        BE_Text.setFont(new java.awt.Font("Tahoma", 0, 14));
        BE_Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BE_TextActionPerformed(evt);
            }
        });
        BE_Text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BE_TextKeyPressed(evt);
            }
        });

        TE_Text.setFont(new java.awt.Font("Tahoma", 0, 14));
        TE_Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TE_TextActionPerformed(evt);
            }
        });
        TE_Text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TE_TextKeyPressed(evt);
            }
        });

        TE.setFont(new java.awt.Font("Tahoma", 0, 14));
        TE.setText("TE");

        BE.setFont(new java.awt.Font("Tahoma", 0, 14));
        BE.setText("BE");

        find.setBackground(new java.awt.Color(255, 255, 255));
        find.setIcon(new javax.swing.ImageIcon("G:\\project\\pics\\icon\\icons\\search.jpg")); // NOI18N
        find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Status, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Status_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Branch)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Reg_No)
                                            .addComponent(jLabel14)
                                            .addComponent(Roll_No))
                                        .addGap(44, 44, 44))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(TE)
                                            .addComponent(FE))
                                        .addGap(52, 52, 52)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Roll_No_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Branch_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(fname_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lname_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(FE_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TE_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(38, 38, 38)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(SE)
                                            .addComponent(BE))
                                        .addGap(41, 41, 41)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(BE_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(SE_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(Reg_No_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(find, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(157, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Reg_No)
                            .addComponent(Reg_No_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(find, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(fname_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lname_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Roll_No, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Roll_No_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Branch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Branch_list))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FE_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SE_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SE, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TE_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TE, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(BE, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(BE_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Status_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Submit, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(Back, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Clear, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))
                .addGap(32, 32, 32))
        );

        Show.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reg No", "Name", "Roll No", "Branch", "FE", "SE", "TE", "BE", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Show.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(Show);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 738, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        Clear_Table.setBackground(new java.awt.Color(255, 255, 255));
        Clear_Table.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14));
        Clear_Table.setIcon(new javax.swing.ImageIcon("G:\\project\\pics\\icon\\icons\\images (2).jpg")); // NOI18N
        Clear_Table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear_TableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Fee_Details, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(163, 163, 163)
                        .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(80, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(663, Short.MAX_VALUE)
                .addComponent(Clear_Table, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(layout.createSequentialGroup()
                .addGap(305, 305, 305)
                .addComponent(Show_All, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(347, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(290, 290, 290))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Menu)
                            .addComponent(Fee_Details))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Show_All)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Clear_Table)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void MenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuActionPerformed
// TODO add your handling code here:
    this.setVisible(false);
    new menu().setVisible(true);
}//GEN-LAST:event_MenuActionPerformed

private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
// TODO add your handling code here:
    Reg_No_Text.setText("");
    FE_Text.setText("");
    fname_Text.setText("");
    lname_Text.setText("");
    Roll_No_Text.setText("");
    Branch_list.setSelectedIndex(0);
    Status_list.setSelectedIndex(0);
   
          
}//GEN-LAST:event_ClearActionPerformed

private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed

    this.setVisible(false);
    new student_details().setVisible(true);
}//GEN-LAST:event_BackActionPerformed

private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
// TODO add your handling code here:
    String FE_fee,SE_fee,TE_fee,BE_fee,Reg_No_2,Fname,Lname,Roll_No_2,Branch_2,Status_2;
    
    Reg_No_2= Reg_No_Text.getText();
    Fname= fname_Text.getText();
    Lname=lname_Text.getText();
    Roll_No_2=Roll_No_Text.getText();
    FE_fee=FE_Text.getText();
    SE_fee=SE_Text.getText();
    TE_fee=TE_Text.getText();
    BE_fee=BE_Text.getText();
    Branch_2=(String)Branch_list.getSelectedItem();
    Status_2=(String)Status_list.getSelectedItem();
  
    
    
    if (Reg_No_2.equals("") || !Pattern.matches("[0-9]+", Reg_No_2) ){
    JOptionPane.showMessageDialog(null, "Please Enter Valid Registration Number");
}
   else if (Fname.equals("") || Pattern.matches("[0-9]+", Fname) || Fname.length()>20){
    JOptionPane.showMessageDialog(null, "Enter Valid First Name");
}
    else if (Lname.equals("") || Pattern.matches("[0-9]+", Lname) || Lname.length()>20){
    JOptionPane.showMessageDialog(null, "Enter Valid Surname");
}
    else if (Roll_No_2.equals("") || !Pattern.matches("[0-9]+", Roll_No_2) || Roll_No_2.length()>10){
    JOptionPane.showMessageDialog(null, "Enter Valid Roll Number");
}
    else
    {    
        try {
                // TODO code application logic here
                Mongo mongo =new Mongo("127.0.0.1",27017); 
                DB db=mongo.getDB("Project_Demo");
                DBCollection collection=db.getCollection("Fees");
                System.out.println("Connected to DB");
                BasicDBObject save=new BasicDBObject();
                BasicDBObject query = new BasicDBObject();
                    query.put("Reg_No",Reg_No_2);
                    DBCursor cursor = collection.find(query);
            
            
                        if(cursor.hasNext()){
                            JOptionPane.showMessageDialog(null, "sorry...data on this Reg. no. is already present");
                            Reg_No_Text.setText("");
                           this.setVisible(false);
                           new fee_details().setVisible(true);
                        }
                        else{
                           
                                save.append("Reg_No",Reg_No_2);
                                save.append("Name",Fname+" "+Lname);
                                save.append("Roll_No",Roll_No_2);
                                save.append("branch",Branch_2);
                                save.append("FE",FE_fee);
                                save.append("SE",SE_fee);
                                save.append("TE",TE_fee);
                                save.append("BE",BE_fee);
                                save.append("Status",Status_2);

                                collection.insert(save);
                                JOptionPane.showMessageDialog(null, "Record Inserted Successfully");
                            }
                        } catch (UnknownHostException ex) {
                Logger.getLogger(fee_details.class.getName()).log(Level.SEVERE, null, ex);
            }
        this.setVisible(false);
        new fee_details().setVisible(true);
    }
}//GEN-LAST:event_SubmitActionPerformed

private void Show_AllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Show_AllActionPerformed
DefaultTableModel u = (DefaultTableModel) Show.getModel();
    int no = u.getRowCount();
int n=0;
for(n=0; n<no; n++)
    {
     u.removeRow(0);   
    }
    try {
           
            Mongo mongo = new Mongo("127.0.0.1",27017);
            DB db=mongo.getDB("Project_Demo");
            DBCollection collection=db.getCollection("Fees");
            System.out.println("Connected to DB");
            BasicDBObject save=new BasicDBObject();
            
            DBCursor cursor = collection.find();
            while(cursor.hasNext()) {
               
                u.addRow(new Object[]{cursor.next().get("Reg_No"),cursor.curr().get("Name"),cursor.curr().get("Roll_No"),cursor.curr().get("branch"),cursor.curr().get("FE"),cursor.curr().get("SE"),cursor.curr().get("TE"),cursor.curr().get("BE"),cursor.curr().get("Status")});
     
            }
}
        catch (UnknownHostException ex) {
            Logger.getLogger(add_marks.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MongoException ex) {
            Logger.getLogger(add_marks.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_Show_AllActionPerformed

private void FE_TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FE_TextActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_FE_TextActionPerformed

private void SE_TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SE_TextActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_SE_TextActionPerformed

private void BE_TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BE_TextActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_BE_TextActionPerformed

private void TE_TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TE_TextActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_TE_TextActionPerformed

private void Clear_TableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Clear_TableActionPerformed
// TODO add your handling code here:
     DefaultTableModel u = (DefaultTableModel) Show.getModel();
int no = u.getRowCount();
int n=0;
for(n=0; n<no; n++)
    {
     u.removeRow(0);   
    }
    
}//GEN-LAST:event_Clear_TableActionPerformed

private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
                                    FE_Text.setEnabled(false);
                                    SE_Text.setEnabled(false);
                                    TE_Text.setEnabled(false);
                                    BE_Text.setEnabled(false);
                                    Status_list.setEnabled(false);
}//GEN-LAST:event_formWindowOpened

private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed
String Reg_No_1;
    Reg_No_1 = Reg_No_Text.getText();
    
    if (Reg_No_1.equals("") || !Pattern.matches("[0-9]+", Reg_No_1) ){
            JOptionPane.showMessageDialog(null, "Please Enter Valid Registration Number");
         }
    else {
            try{
                Mongo  mongo = new Mongo("127.0.0.1",27017);
                DB db= mongo.getDB("Project_Demo");
                DBCollection collection=db.getCollection("Registration");
                System.out.println("Connected to DB");
                BasicDBObject query = new BasicDBObject();
                query.put("Reg_No",Reg_No_1);
                DBCursor cursor = collection.find(query);
                if(cursor.hasNext()){
                    JOptionPane.showMessageDialog(null, "Record Found");
                    DBObject save = cursor.next();
                                 String fname =(String) save.get("Fname");
                                 String lname =(String) save.get("Lname");
                                 String roll =(String) save.get("Roll_No");
                                 String dept =(String) save.get("Dept");
                                 fname_Text.setText(fname);
                                 lname_Text.setText(lname);
                                 Roll_No_Text.setText(roll);
                                 Branch_list.setSelectedItem(dept);
                                 fname_Text.setEnabled(false);
                                 lname_Text.setEnabled(false);
                                  Roll_No_Text.setEnabled(false);
                                   Branch_list.setEnabled(false);
                                  Reg_No_Text.setEnabled(false);
                                 FE_Text.setEnabled(true);
                                 SE_Text.setEnabled(true);
                                 TE_Text.setEnabled(true);
                                 BE_Text.setEnabled(true);
                                 Status_list.setEnabled(true);
                             
                                
                                 
                                 
                    
                }
                else{
                    JOptionPane.showMessageDialog(null, "Record Not Found");
                    fname_Text.setEnabled(false);
                                 lname_Text.setEnabled(false);
                                  Roll_No_Text.setEnabled(false);
                                   Branch_list.setEnabled(false);
                                    //Reg_No_Text.setEnabled(false);
                                 FE_Text.setEnabled(false);
                                 SE_Text.setEnabled(false);
                                 TE_Text.setEnabled(false);
                                 BE_Text.setEnabled(false);
                                 Status_list.setEnabled(false);
                }
                }
                catch (UnknownHostException ex) {
                    Logger.getLogger(add_marks.class.getName()).log(Level.SEVERE, null, ex);
                } 
                catch (MongoException ex) {
                    Logger.getLogger(add_marks.class.getName()).log(Level.SEVERE, null, ex);
                }
         }
}//GEN-LAST:event_findActionPerformed

private void Status_listKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Status_listKeyPressed
// TODO add your handling code here:
    if(evt.getKeyCode()==KeyEvent.VK_ENTER){
    String FE_fee,SE_fee,TE_fee,BE_fee,Reg_No_2,Fname,Lname,Roll_No_2,Branch_2,Status_2;
    
    Reg_No_2= Reg_No_Text.getText();
    Fname= fname_Text.getText();
    Lname=lname_Text.getText();
    Roll_No_2=Roll_No_Text.getText();
    FE_fee=FE_Text.getText();
    SE_fee=SE_Text.getText();
    TE_fee=TE_Text.getText();
    BE_fee=BE_Text.getText();
    Branch_2=(String)Branch_list.getSelectedItem();
    Status_2=(String)Status_list.getSelectedItem();
  
    
    
    if (Reg_No_2.equals("") || !Pattern.matches("[0-9]+", Reg_No_2) ){
    JOptionPane.showMessageDialog(null, "Please Enter Valid Registration Number");
}
   else if (Fname.equals("") || Pattern.matches("[0-9]+", Fname) || Fname.length()>20){
    JOptionPane.showMessageDialog(null, "Enter Valid First Name");
}
    else if (Lname.equals("") || Pattern.matches("[0-9]+", Lname) || Lname.length()>20){
    JOptionPane.showMessageDialog(null, "Enter Valid Surname");
}
    else if (Roll_No_2.equals("") || !Pattern.matches("[0-9]+", Roll_No_2) || Roll_No_2.length()>10){
    JOptionPane.showMessageDialog(null, "Enter Valid Roll Number");
}
    else
    {    
        try {
                // TODO code application logic here
                Mongo mongo =new Mongo("127.0.0.1",27017); 
                DB db=mongo.getDB("Project_Demo");
                DBCollection collection=db.getCollection("Fees");
                System.out.println("Connected to DB");
                BasicDBObject save=new BasicDBObject();
                BasicDBObject query = new BasicDBObject();
                    query.put("Reg_No",Reg_No_2);
                    DBCursor cursor = collection.find(query);
            
            
                        if(cursor.hasNext()){
                            JOptionPane.showMessageDialog(null, "sorry...data on this Reg. no. is already present");
                            Reg_No_Text.setText("");
                           this.setVisible(false);
                           new fee_details().setVisible(true);
                        }
                        else{
                           
                                save.append("Reg_No",Reg_No_2);
                                save.append("Name",Fname+" "+Lname);
                                save.append("Roll_No",Roll_No_2);
                                save.append("branch",Branch_2);
                                save.append("FE",FE_fee);
                                save.append("SE",SE_fee);
                                save.append("TE",TE_fee);
                                save.append("BE",BE_fee);
                                save.append("Status",Status_2);

                                collection.insert(save);
                                JOptionPane.showMessageDialog(null, "Record Inserted Successfully");
                            }
                        } catch (UnknownHostException ex) {
                Logger.getLogger(fee_details.class.getName()).log(Level.SEVERE, null, ex);
            }
        this.setVisible(false);
        new fee_details().setVisible(true);
    }
   }
}//GEN-LAST:event_Status_listKeyPressed

private void BE_TextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BE_TextKeyPressed
// TODO add your handling code here:
    if(evt.getKeyCode()==KeyEvent.VK_ENTER){
    String FE_fee,SE_fee,TE_fee,BE_fee,Reg_No_2,Fname,Lname,Roll_No_2,Branch_2,Status_2;
    
    Reg_No_2= Reg_No_Text.getText();
    Fname= fname_Text.getText();
    Lname=lname_Text.getText();
    Roll_No_2=Roll_No_Text.getText();
    FE_fee=FE_Text.getText();
    SE_fee=SE_Text.getText();
    TE_fee=TE_Text.getText();
    BE_fee=BE_Text.getText();
    Branch_2=(String)Branch_list.getSelectedItem();
    Status_2=(String)Status_list.getSelectedItem();
  
    
    
    if (Reg_No_2.equals("") || !Pattern.matches("[0-9]+", Reg_No_2) ){
    JOptionPane.showMessageDialog(null, "Please Enter Valid Registration Number");
}
   else if (Fname.equals("") || Pattern.matches("[0-9]+", Fname) || Fname.length()>20){
    JOptionPane.showMessageDialog(null, "Enter Valid First Name");
}
    else if (Lname.equals("") || Pattern.matches("[0-9]+", Lname) || Lname.length()>20){
    JOptionPane.showMessageDialog(null, "Enter Valid Surname");
}
    else if (Roll_No_2.equals("") || !Pattern.matches("[0-9]+", Roll_No_2) || Roll_No_2.length()>10){
    JOptionPane.showMessageDialog(null, "Enter Valid Roll Number");
}
    else
    {    
        try {
                // TODO code application logic here
                Mongo mongo =new Mongo("127.0.0.1",27017); 
                DB db=mongo.getDB("Project_Demo");
                DBCollection collection=db.getCollection("Fees");
                System.out.println("Connected to DB");
                BasicDBObject save=new BasicDBObject();
                BasicDBObject query = new BasicDBObject();
                    query.put("Reg_No",Reg_No_2);
                    DBCursor cursor = collection.find(query);
            
            
                        if(cursor.hasNext()){
                            JOptionPane.showMessageDialog(null, "sorry...data on this Reg. no. is already present");
                            Reg_No_Text.setText("");
                           this.setVisible(false);
                           new fee_details().setVisible(true);
                        }
                        else{
                           
                                save.append("Reg_No",Reg_No_2);
                                save.append("Name",Fname+" "+Lname);
                                save.append("Roll_No",Roll_No_2);
                                save.append("branch",Branch_2);
                                save.append("FE",FE_fee);
                                save.append("SE",SE_fee);
                                save.append("TE",TE_fee);
                                save.append("BE",BE_fee);
                                save.append("Status",Status_2);

                                collection.insert(save);
                                JOptionPane.showMessageDialog(null, "Record Inserted Successfully");
                            }
                        } catch (UnknownHostException ex) {
                Logger.getLogger(fee_details.class.getName()).log(Level.SEVERE, null, ex);
            }
        this.setVisible(false);
        new fee_details().setVisible(true);
    }
   }
}//GEN-LAST:event_BE_TextKeyPressed

private void TE_TextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TE_TextKeyPressed
// TODO add your handling code here:
    if(evt.getKeyCode()==KeyEvent.VK_ENTER){
    String FE_fee,SE_fee,TE_fee,BE_fee,Reg_No_2,Fname,Lname,Roll_No_2,Branch_2,Status_2;
    
    Reg_No_2= Reg_No_Text.getText();
    Fname= fname_Text.getText();
    Lname=lname_Text.getText();
    Roll_No_2=Roll_No_Text.getText();
    FE_fee=FE_Text.getText();
    SE_fee=SE_Text.getText();
    TE_fee=TE_Text.getText();
    BE_fee=BE_Text.getText();
    Branch_2=(String)Branch_list.getSelectedItem();
    Status_2=(String)Status_list.getSelectedItem();
  
    
    
    if (Reg_No_2.equals("") || !Pattern.matches("[0-9]+", Reg_No_2) ){
    JOptionPane.showMessageDialog(null, "Please Enter Valid Registration Number");
}
   else if (Fname.equals("") || Pattern.matches("[0-9]+", Fname) || Fname.length()>20){
    JOptionPane.showMessageDialog(null, "Enter Valid First Name");
}
    else if (Lname.equals("") || Pattern.matches("[0-9]+", Lname) || Lname.length()>20){
    JOptionPane.showMessageDialog(null, "Enter Valid Surname");
}
    else if (Roll_No_2.equals("") || !Pattern.matches("[0-9]+", Roll_No_2) || Roll_No_2.length()>10){
    JOptionPane.showMessageDialog(null, "Enter Valid Roll Number");
}
    else
    {    
        try {
                // TODO code application logic here
                Mongo mongo =new Mongo("127.0.0.1",27017); 
                DB db=mongo.getDB("Project_Demo");
                DBCollection collection=db.getCollection("Fees");
                System.out.println("Connected to DB");
                BasicDBObject save=new BasicDBObject();
                BasicDBObject query = new BasicDBObject();
                    query.put("Reg_No",Reg_No_2);
                    DBCursor cursor = collection.find(query);
            
            
                        if(cursor.hasNext()){
                            JOptionPane.showMessageDialog(null, "sorry...data on this Reg. no. is already present");
                            Reg_No_Text.setText("");
                           this.setVisible(false);
                           new fee_details().setVisible(true);
                        }
                        else{
                           
                                save.append("Reg_No",Reg_No_2);
                                save.append("Name",Fname+" "+Lname);
                                save.append("Roll_No",Roll_No_2);
                                save.append("branch",Branch_2);
                                save.append("FE",FE_fee);
                                save.append("SE",SE_fee);
                                save.append("TE",TE_fee);
                                save.append("BE",BE_fee);
                                save.append("Status",Status_2);

                                collection.insert(save);
                                JOptionPane.showMessageDialog(null, "Record Inserted Successfully");
                            }
                        } catch (UnknownHostException ex) {
                Logger.getLogger(fee_details.class.getName()).log(Level.SEVERE, null, ex);
            }
        this.setVisible(false);
        new fee_details().setVisible(true);
    }
   }
}//GEN-LAST:event_TE_TextKeyPressed

private void SE_TextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SE_TextKeyPressed
// TODO add your handling code here:
    if(evt.getKeyCode()==KeyEvent.VK_ENTER){
    String FE_fee,SE_fee,TE_fee,BE_fee,Reg_No_2,Fname,Lname,Roll_No_2,Branch_2,Status_2;
    
    Reg_No_2= Reg_No_Text.getText();
    Fname= fname_Text.getText();
    Lname=lname_Text.getText();
    Roll_No_2=Roll_No_Text.getText();
    FE_fee=FE_Text.getText();
    SE_fee=SE_Text.getText();
    TE_fee=TE_Text.getText();
    BE_fee=BE_Text.getText();
    Branch_2=(String)Branch_list.getSelectedItem();
    Status_2=(String)Status_list.getSelectedItem();
  
    
    
    if (Reg_No_2.equals("") || !Pattern.matches("[0-9]+", Reg_No_2) ){
    JOptionPane.showMessageDialog(null, "Please Enter Valid Registration Number");
}
   else if (Fname.equals("") || Pattern.matches("[0-9]+", Fname) || Fname.length()>20){
    JOptionPane.showMessageDialog(null, "Enter Valid First Name");
}
    else if (Lname.equals("") || Pattern.matches("[0-9]+", Lname) || Lname.length()>20){
    JOptionPane.showMessageDialog(null, "Enter Valid Surname");
}
    else if (Roll_No_2.equals("") || !Pattern.matches("[0-9]+", Roll_No_2) || Roll_No_2.length()>10){
    JOptionPane.showMessageDialog(null, "Enter Valid Roll Number");
}
    else
    {    
        try {
                // TODO code application logic here
                Mongo mongo =new Mongo("127.0.0.1",27017); 
                DB db=mongo.getDB("Project_Demo");
                DBCollection collection=db.getCollection("Fees");
                System.out.println("Connected to DB");
                BasicDBObject save=new BasicDBObject();
                BasicDBObject query = new BasicDBObject();
                    query.put("Reg_No",Reg_No_2);
                    DBCursor cursor = collection.find(query);
            
            
                        if(cursor.hasNext()){
                            JOptionPane.showMessageDialog(null, "sorry...data on this Reg. no. is already present");
                            Reg_No_Text.setText("");
                           this.setVisible(false);
                           new fee_details().setVisible(true);
                        }
                        else{
                           
                                save.append("Reg_No",Reg_No_2);
                                save.append("Name",Fname+" "+Lname);
                                save.append("Roll_No",Roll_No_2);
                                save.append("branch",Branch_2);
                                save.append("FE",FE_fee);
                                save.append("SE",SE_fee);
                                save.append("TE",TE_fee);
                                save.append("BE",BE_fee);
                                save.append("Status",Status_2);

                                collection.insert(save);
                                JOptionPane.showMessageDialog(null, "Record Inserted Successfully");
                            }
                        } catch (UnknownHostException ex) {
                Logger.getLogger(fee_details.class.getName()).log(Level.SEVERE, null, ex);
            }
        this.setVisible(false);
        new fee_details().setVisible(true);
    }
   }
}//GEN-LAST:event_SE_TextKeyPressed

private void FE_TextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FE_TextKeyPressed
// TODO add your handling code here:
   if(evt.getKeyCode()==KeyEvent.VK_ENTER){
    String FE_fee,SE_fee,TE_fee,BE_fee,Reg_No_2,Fname,Lname,Roll_No_2,Branch_2,Status_2;
    
    Reg_No_2= Reg_No_Text.getText();
    Fname= fname_Text.getText();
    Lname=lname_Text.getText();
    Roll_No_2=Roll_No_Text.getText();
    FE_fee=FE_Text.getText();
    SE_fee=SE_Text.getText();
    TE_fee=TE_Text.getText();
    BE_fee=BE_Text.getText();
    Branch_2=(String)Branch_list.getSelectedItem();
    Status_2=(String)Status_list.getSelectedItem();
  
    
    
    if (Reg_No_2.equals("") || !Pattern.matches("[0-9]+", Reg_No_2) ){
    JOptionPane.showMessageDialog(null, "Please Enter Valid Registration Number");
}
   else if (Fname.equals("") || Pattern.matches("[0-9]+", Fname) || Fname.length()>20){
    JOptionPane.showMessageDialog(null, "Enter Valid First Name");
}
    else if (Lname.equals("") || Pattern.matches("[0-9]+", Lname) || Lname.length()>20){
    JOptionPane.showMessageDialog(null, "Enter Valid Surname");
}
    else if (Roll_No_2.equals("") || !Pattern.matches("[0-9]+", Roll_No_2) || Roll_No_2.length()>10){
    JOptionPane.showMessageDialog(null, "Enter Valid Roll Number");
}
    else
    {    
        try {
                // TODO code application logic here
                Mongo mongo =new Mongo("127.0.0.1",27017); 
                DB db=mongo.getDB("Project_Demo");
                DBCollection collection=db.getCollection("Fees");
                System.out.println("Connected to DB");
                BasicDBObject save=new BasicDBObject();
                BasicDBObject query = new BasicDBObject();
                    query.put("Reg_No",Reg_No_2);
                    DBCursor cursor = collection.find(query);
            
            
                        if(cursor.hasNext()){
                            JOptionPane.showMessageDialog(null, "sorry...data on this Reg. no. is already present");
                            Reg_No_Text.setText("");
                           this.setVisible(false);
                           new fee_details().setVisible(true);
                        }
                        else{
                           
                                save.append("Reg_No",Reg_No_2);
                                save.append("Name",Fname+" "+Lname);
                                save.append("Roll_No",Roll_No_2);
                                save.append("branch",Branch_2);
                                save.append("FE",FE_fee);
                                save.append("SE",SE_fee);
                                save.append("TE",TE_fee);
                                save.append("BE",BE_fee);
                                save.append("Status",Status_2);

                                collection.insert(save);
                                JOptionPane.showMessageDialog(null, "Record Inserted Successfully");
                            }
                        } catch (UnknownHostException ex) {
                Logger.getLogger(fee_details.class.getName()).log(Level.SEVERE, null, ex);
            }
        this.setVisible(false);
        new fee_details().setVisible(true);
    }
   }
}//GEN-LAST:event_FE_TextKeyPressed

private void Reg_No_TextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Reg_No_TextKeyPressed
// TODO add your handling code here:
    if(evt.getKeyCode()==KeyEvent.VK_ENTER){
    String Reg_No_1;
    Reg_No_1 = Reg_No_Text.getText();
    
    if (Reg_No_1.equals("") || !Pattern.matches("[0-9]+", Reg_No_1) ){
            JOptionPane.showMessageDialog(null, "Please Enter Valid Registration Number");
         }
    else {
            try{
                Mongo  mongo = new Mongo("127.0.0.1",27017);
                DB db= mongo.getDB("Project_Demo");
                DBCollection collection=db.getCollection("Registration");
                System.out.println("Connected to DB");
                BasicDBObject query = new BasicDBObject();
                query.put("Reg_No",Reg_No_1);
                DBCursor cursor = collection.find(query);
                if(cursor.hasNext()){
                    JOptionPane.showMessageDialog(null, "Record Found");
                    DBObject save = cursor.next();
                                 String fname =(String) save.get("Fname");
                                 String lname =(String) save.get("Lname");
                                 String roll =(String) save.get("Roll_No");
                                 String dept =(String) save.get("Dept");
                                 fname_Text.setText(fname);
                                 lname_Text.setText(lname);
                                 Roll_No_Text.setText(roll);
                                 Branch_list.setSelectedItem(dept);
                                 fname_Text.setEnabled(false);
                                 lname_Text.setEnabled(false);
                                 Roll_No_Text.setEnabled(false);
                                 Branch_list.setEnabled(false);
                                 Reg_No_Text.setEnabled(false);
                                 FE_Text.setEnabled(true);
                                 SE_Text.setEnabled(true);
                                 TE_Text.setEnabled(true);
                                 BE_Text.setEnabled(true);
                                 Status_list.setEnabled(true);
                             
                                
                                 
                                 
                    
                }
                else{
                    JOptionPane.showMessageDialog(null, "Record Not Found");
                    fname_Text.setEnabled(false);
                                 lname_Text.setEnabled(false);
                                 Roll_No_Text.setEnabled(false);
                                 Branch_list.setEnabled(false);
                                 FE_Text.setEnabled(false);
                                 SE_Text.setEnabled(false);
                                 TE_Text.setEnabled(false);
                                 BE_Text.setEnabled(false);
                                 Status_list.setEnabled(false);
                }
                }
                catch (UnknownHostException ex) {
                    Logger.getLogger(add_marks.class.getName()).log(Level.SEVERE, null, ex);
                } 
                catch (MongoException ex) {
                    Logger.getLogger(add_marks.class.getName()).log(Level.SEVERE, null, ex);
                }
         }
    }
}//GEN-LAST:event_Reg_No_TextKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fee_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fee_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fee_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fee_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new fee_details().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BE;
    private javax.swing.JTextField BE_Text;
    private javax.swing.JButton Back;
    private javax.swing.JLabel Branch;
    private javax.swing.JComboBox Branch_list;
    private javax.swing.JButton Clear;
    private javax.swing.JButton Clear_Table;
    private javax.swing.JLabel FE;
    private javax.swing.JTextField FE_Text;
    private javax.swing.JLabel Fee_Details;
    private javax.swing.JButton Menu;
    private javax.swing.JLabel Reg_No;
    private javax.swing.JTextField Reg_No_Text;
    private javax.swing.JLabel Roll_No;
    private javax.swing.JTextField Roll_No_Text;
    private javax.swing.JLabel SE;
    private javax.swing.JTextField SE_Text;
    private javax.swing.JTable Show;
    private javax.swing.JButton Show_All;
    private javax.swing.JLabel Status;
    private javax.swing.JComboBox Status_list;
    private javax.swing.JButton Submit;
    private javax.swing.JLabel TE;
    private javax.swing.JTextField TE_Text;
    private javax.swing.JButton find;
    private javax.swing.JTextField fname_Text;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField lname_Text;
    // End of variables declaration//GEN-END:variables
}
